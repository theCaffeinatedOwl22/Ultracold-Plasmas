function [s] = fieldForExpConfig(zRange,pRange,numZPts,numPPts,amps)
%% Parameters
% zRange (1xn double): z-positions (units mm) to return field values for
% pRange (1xm double): p-positions (units mm) to return field values for
% numZPts (1x1 double): number of points to use along z-axis
% numPPts (1x1 double): number of points to use along p-axis
% amps (1x1 double): current (in A) through each current loop
% s (struct): see last section for info

%% Function Notes

% This program calculates the magnetic field produced by an array of current
% loops in the anti-Helmholtz configuration, and is configured to calculate the magnetic fields we
% use in our experiment.

% I wrote a function to calculate the magnetic field from a single current loop of given
% radius, current direction, and position along symmetry axis. This program calls that
% function to obtain the field generated by each individual loop, and then obtains the total quadrupole magnetic
% field by superimposing the fields from all coils.

%% Define Experimental Loop Configuration
% This defines the possible z-positions. The distance bewteen the inner-most current
% loops is 7 cm. The wire diameter of each current loop is 4 mm. There are 9 current
% loops wrapped adjacent to each other on z-axis. There are 7 layers of coil wraps in p dim. The current
% loops are wrapped around a cylindrial part of the chamber with diameter 2.8 cm.
% Thus, the radius of the inner-most current loop is 1.4 cm plus half the wire diameter.

% Note that the above measurements are rough, and the numbers used below may differ slightly.

numWraps = 10;   % layers along z-dimension
numLayers = 8;  % wraps along p-dimension
wireDiameter = 4;   % units: mm
coilSpacing = 70;    % units: mm
coilRadius = 14;    % units: mm

% calculate z-positions of current loops
zPos = zeros(1,numWraps);
for ii = 1:numWraps
    zPos(ii) = coilSpacing/2+wireDiameter*(ii-.5);    % in mm
end
zPos = [-zPos zPos];    % the coils are symmetrically placed around z = 0

% calculate radii of current loops
radii = zeros(1,numLayers);
for ii = 1:length(radii)
    radii(ii) = coilRadius+wireDiameter*(ii-.5);
end

[zPos,radii] = meshgrid(zPos,radii);    % ensure that each z-position has a corresponding coil radius
zPos = zPos(:);
radii = radii(:);
pol = ones(size(zPos)); % assign current direction. Left set of loops has one current, right set of loops has the opposite
pol(logical(zPos>0)) = pol(logical(zPos>0)).*-1;

%% Set Up Gridded Positions
zForPlot = linspace(zRange(1),zRange(2),numZPts);   % generate position vectors according to user specification
pForPlot = linspace(pRange(1),pRange(2),numPPts);   % again, all length units in mm

[zmesh,pmesh] = meshgrid(zForPlot,pForPlot); % get gridded positions

%% Sum over each current loop

BzSum = zeros(size(zmesh));   % initialize matrices for field calculations
BpSum = zeros(size(pmesh));

u0 = pi*4e-7;   % magnetic permeability of free space in SI units

for ii = 1:length(radii)    % iterate through each current loop
    zDimUnits = zmesh./radii(ii);    % convert positions to dimensionless units because that's what function uses
    pDimUnits = pmesh./radii(ii);
    zPosDimUnits = zPos(ii)/radii(ii);
    
    [Bp, Bz] = fieldFromSingleCurrentLoop(zDimUnits,pDimUnits,zPosDimUnits,pol(ii));
    BpSum = BpSum+Bp.*u0.*amps./radii(ii).*1e4.*1e3;    % 1e3 converts coil radius from mm to m
    BzSum = BzSum+Bz.*u0.*amps./radii(ii).*1e4.*1e3;    % 1e4 converts T to G
    
end

Bmag = sqrt(BpSum.^2+BzSum.^2); % magnetic field strength in G

%% Output information into structure
s.zInMM = zForPlot; % all distances in mm, all fields in G
s.pInMM = pForPlot; % contains vector of positions on p-axis
s.zMeshMM = zmesh;   % meshed positions
s.pMeshMM = pmesh;

s.coilZPos = zPos;  % record current loop conditions that fields were derived for
s.coilRadii = radii; 
s.pol = pol;

s.Bp = BpSum;   % magnetic field along rho axis as a function of rho and z
s.Bz = BzSum;   % magnetic field along symmetry axis as a function of rho and z
s.Bmag = Bmag;  % magnitude of field in G as a function of rho and z

end